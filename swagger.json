{
  "openapi": "3.0.0",
  "info": {
    "title": "Servi√ßo de agendamento de consultas",
    "description": "API para agendamento de consultas",
    "version": "1.0.0"
  },
  "paths": {
    "/specialities": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Speciality"],
        "summary": "Create a new speciality",
        "description": "create a speciality ta could be used by a doctor",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpecialityRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "A JSON with all keys of the created speciality",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpecialityResponse"
                }
              }
            }
          },
          "401": {
            "description": "Error token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseTokenError"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": ["User"],
        "summary": "Create new user",
        "description": "create a user to manage and use the system",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "A JSON with all keys of the created user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["User"],
        "description": "User authentication",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Generated token"
          },
          "401": {
            "description": "Token error"
          }
        }
      }
    },
    "/doctors": {
      "post": {
        "tags": ["Doctors"],
        "description": "User authentication",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DoctorRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create a new doctor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoctorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Error to create doctor"
          }
        }
      }
    },
    "/doctor-info": {
      "post": {
        "tags": ["doctor-info"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Create information about doctor",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DoctorInfoRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create a new information about doctor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoctorInfoResponse"
                }
              }
            }
          },
          "401": {
            "description": "Error to create doctor info"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SpecialityRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Speciality name",
            "example": "Pediatria"
          },
          "description": {
            "type": "string",
            "description": "Speciality description",
            "example": "Pediatria"
          }
        },
        "required": ["name", "description"]
      },
      "SpecialityResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "d8a9a6f7-4c4c-4c4c-4c4c-4c4c4c4c4c4c"
          },
          "name": {
            "type": "string",
            "example": "Pediatria"
          },
          "description": {
            "type": "string",
            "example": "Pediatria"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-01-01T00:00:00Z"
          }
        }
      },
      "ResponseTokenError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Token is missing!"
          }
        }
      },
      "UserRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Guilherme",
            "description": "User name"
          },
          "username": {
            "type": "string",
            "example": "gui_barboza",
            "description": "User username"
          },
          "password": {
            "type": "string",
            "example": "123456",
            "description": "User password"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "d8a9a6f7-4c4c-4c4c-4c4c-4c4c4c4c4c4c"
          },
          "name": {
            "type": "string",
            "example": "Guilherme"
          },
          "username": {
            "type": "string",
            "example": "gui_barboza"
          },
          "password": {
            "type": "string",
            "example": "123456",
            "format": "password"
          },
          "isAdmin": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "User username",
            "example": "mauricio"
          },
          "password": {
            "type": "string",
            "description": "User password",
            "example": "123456789"
          }
        }
      },
      "DoctorRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Guilherme",
            "description": "User name"
          },
          "username": {
            "type": "string",
            "example": "gui_barboza",
            "description": "User username"
          },
          "password": {
            "type": "string",
            "example": "123456",
            "description": "User password"
          },
          "email": {
            "type": "string",
            "example": "user@gmail.com"
          },
          "crm": {
            "type": "string",
            "example": "123456"
          },
          "specialityId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "DoctorResponse": {
        "type": "object"
      },
      "DoctorInfoRequest": {
        "type": "object",
        "properties": {
          "startAt": {
            "type": "string",
            "example": "09:00",
            "description": "Time the doctor starts his shift"
          },
          "endAt": {
            "type": "string",
            "example": "18:00",
            "description": "Time the doctor closes his shift"
          },
          "price": {
            "type": "number",
            "example": 400,
            "description": "Consultation price"
          },
          "duration": {
            "type": "number",
            "example": 30,
            "description": "Consultation duration in minutes"
          }
        }
      },
      "DoctorInfoResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "d8a9a6f7-4c4c-4c4c-4c4c-4c4c4c4c4c4c",
            "description": "Doctor info id"
          },
          "doctorId": {
            "type": "string",
            "format": "uuid",
            "example": "d8a9a6f7-4c4c-4c4c-4c4c-4c4c4c4c4c4c",
            "description": "Doctor id"
          },
          "startAt": {
            "type": "string",
            "example": "09:00",
            "description": "Time the doctor starts his shift"
          },
          "endAt": {
            "type": "string",
            "example": "18:00",
            "description": "Time the doctor closes his shift"
          },
          "price": {
            "type": "number",
            "example": 400,
            "description": "Consultation price"
          },
          "duration": {
            "type": "number",
            "example": 30,
            "description": "Consultation duration in minutes"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "tokenUrl": "http://localhost:3333/login"
      }
    }
  }
}
